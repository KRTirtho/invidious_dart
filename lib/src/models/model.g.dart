// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$InvidiousChannelObjectImpl _$$InvidiousChannelObjectImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousChannelObjectImpl(
      type: json['type'] as String,
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      authorVerified: json['authorVerified'] as bool,
      authorThumbnails: (json['authorThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      autoGenerated: json['autoGenerated'] as bool,
      subCount: (json['subCount'] as num).toInt(),
      videoCount: (json['videoCount'] as num).toInt(),
      description: json['description'] as String,
      descriptionHtml: json['descriptionHtml'] as String,
    );

Map<String, dynamic> _$$InvidiousChannelObjectImplToJson(
        _$InvidiousChannelObjectImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'authorVerified': instance.authorVerified,
      'authorThumbnails': instance.authorThumbnails,
      'autoGenerated': instance.autoGenerated,
      'subCount': instance.subCount,
      'videoCount': instance.videoCount,
      'description': instance.description,
      'descriptionHtml': instance.descriptionHtml,
    };

_$InvidiousImageObjectImpl _$$InvidiousImageObjectImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousImageObjectImpl(
      url: json['url'] as String,
      width: (json['width'] as num).toInt(),
      height: (json['height'] as num).toInt(),
    );

Map<String, dynamic> _$$InvidiousImageObjectImplToJson(
        _$InvidiousImageObjectImpl instance) =>
    <String, dynamic>{
      'url': instance.url,
      'width': instance.width,
      'height': instance.height,
    };

_$InvidiousPlaylistObjectImpl _$$InvidiousPlaylistObjectImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousPlaylistObjectImpl(
      type: json['type'] as String,
      title: json['title'] as String,
      playlistId: json['playlistId'] as String,
      playlistThumbnail: json['playlistThumbnail'] as String,
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      authorVerified: json['authorVerified'] as bool,
      videoCount: (json['videoCount'] as num).toInt(),
      videos: (json['videos'] as List<dynamic>)
          .map((e) =>
              InvidiousPlaylistVideoObject.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$$InvidiousPlaylistObjectImplToJson(
        _$InvidiousPlaylistObjectImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'title': instance.title,
      'playlistId': instance.playlistId,
      'playlistThumbnail': instance.playlistThumbnail,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'authorVerified': instance.authorVerified,
      'videoCount': instance.videoCount,
      'videos': instance.videos,
    };

_$InvidiousPlaylistVideoObjectImpl _$$InvidiousPlaylistVideoObjectImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousPlaylistVideoObjectImpl(
      title: json['title'] as String,
      videoId: json['videoId'] as String,
      lengthSeconds: (json['lengthSeconds'] as num).toInt(),
      videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$$InvidiousPlaylistVideoObjectImplToJson(
        _$InvidiousPlaylistVideoObjectImpl instance) =>
    <String, dynamic>{
      'title': instance.title,
      'videoId': instance.videoId,
      'lengthSeconds': instance.lengthSeconds,
      'videoThumbnails': instance.videoThumbnails,
    };

_$InvidiousThumbnailObjectImpl _$$InvidiousThumbnailObjectImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousThumbnailObjectImpl(
      quality: json['quality'] as String,
      url: json['url'] as String,
      width: (json['width'] as num).toInt(),
      height: (json['height'] as num).toInt(),
    );

Map<String, dynamic> _$$InvidiousThumbnailObjectImplToJson(
        _$InvidiousThumbnailObjectImpl instance) =>
    <String, dynamic>{
      'quality': instance.quality,
      'url': instance.url,
      'width': instance.width,
      'height': instance.height,
    };

_$InvidiousVideoObjectImpl _$$InvidiousVideoObjectImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousVideoObjectImpl(
      type: json['type'] as String,
      title: json['title'] as String,
      videoId: json['videoId'] as String,
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      authorVerified: json['authorVerified'] as bool,
      videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      description: json['description'] as String,
      descriptionHtml: json['descriptionHtml'] as String,
      viewCount: (json['viewCount'] as num).toInt(),
      viewCountText: json['viewCountText'] as String,
      published: (json['published'] as num).toInt(),
      publishedText: json['publishedText'] as String,
      premiereTimestamp: json['premiereTimestamp'] == null
          ? null
          : DateTime.parse(json['premiereTimestamp'] as String),
      liveNow: json['liveNow'] as bool,
      premiere: json['premiere'] as bool?,
      upcoming: json['upcoming'] as bool?,
    );

Map<String, dynamic> _$$InvidiousVideoObjectImplToJson(
        _$InvidiousVideoObjectImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'title': instance.title,
      'videoId': instance.videoId,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'authorVerified': instance.authorVerified,
      'videoThumbnails': instance.videoThumbnails,
      'description': instance.description,
      'descriptionHtml': instance.descriptionHtml,
      'viewCount': instance.viewCount,
      'viewCountText': instance.viewCountText,
      'published': instance.published,
      'publishedText': instance.publishedText,
      'premiereTimestamp': instance.premiereTimestamp?.toIso8601String(),
      'liveNow': instance.liveNow,
      'premiere': instance.premiere,
      'upcoming': instance.upcoming,
    };

_$InvidiousCaptionResponseImpl _$$InvidiousCaptionResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousCaptionResponseImpl(
      captions: (json['captions'] as List<dynamic>)
          .map((e) => InvidiousCaptionResponseCaption.fromJson(
              e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$$InvidiousCaptionResponseImplToJson(
        _$InvidiousCaptionResponseImpl instance) =>
    <String, dynamic>{
      'captions': instance.captions,
    };

_$InvidiousCaptionResponseCaptionImpl
    _$$InvidiousCaptionResponseCaptionImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousCaptionResponseCaptionImpl(
          label: json['label'] as String,
          languageCode: json['languageCode'] as String,
          url: json['url'] as String,
        );

Map<String, dynamic> _$$InvidiousCaptionResponseCaptionImplToJson(
        _$InvidiousCaptionResponseCaptionImpl instance) =>
    <String, dynamic>{
      'label': instance.label,
      'languageCode': instance.languageCode,
      'url': instance.url,
    };

_$InvidiousClipResponseImpl _$$InvidiousClipResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousClipResponseImpl(
      startTime: DateTime.parse(json['startTime'] as String),
      endTime: DateTime.parse(json['endTime'] as String),
      clipTitle: json['clipTitle'] as String,
      video:
          InvidiousVideoObject.fromJson(json['video'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$$InvidiousClipResponseImplToJson(
        _$InvidiousClipResponseImpl instance) =>
    <String, dynamic>{
      'startTime': instance.startTime.toIso8601String(),
      'endTime': instance.endTime.toIso8601String(),
      'clipTitle': instance.clipTitle,
      'video': instance.video,
    };

_$InvidiousCommentResponseImpl _$$InvidiousCommentResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousCommentResponseImpl(
      commentCount: (json['commentCount'] as num?)?.toInt(),
      videoId: json['videoId'] as String,
      comments: (json['comments'] as List<dynamic>)
          .map((e) => InvidiousCommentResponseComment.fromJson(
              e as Map<String, dynamic>))
          .toList(),
      continuation: json['continuation'] as String?,
    );

Map<String, dynamic> _$$InvidiousCommentResponseImplToJson(
        _$InvidiousCommentResponseImpl instance) =>
    <String, dynamic>{
      'commentCount': instance.commentCount,
      'videoId': instance.videoId,
      'comments': instance.comments,
      'continuation': instance.continuation,
    };

_$InvidiousCommentResponseCommentImpl
    _$$InvidiousCommentResponseCommentImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousCommentResponseCommentImpl(
          author: json['author'] as String,
          authorThumbnails: (json['authorThumbnails'] as List<dynamic>)
              .map((e) =>
                  InvidiousImageObject.fromJson(e as Map<String, dynamic>))
              .toList(),
          authorId: json['authorId'] as String,
          authorUrl: json['authorUrl'] as String,
          isEdited: json['isEdited'] as bool,
          isPinned: json['isPinned'] as bool,
          content: json['content'] as String,
          contentHtml: json['contentHtml'] as String,
          published: (json['published'] as num).toInt(),
          publishedText: json['publishedText'] as String,
          likeCount: (json['likeCount'] as num).toInt(),
          commentId: json['commentId'] as String,
          authorIsChannelOwner: json['authorIsChannelOwner'] as bool,
          creatorHeart: json['creatorHeart'] == null
              ? null
              : InvidiousCommentResponseCreatorHeart.fromJson(
                  json['creatorHeart'] as Map<String, dynamic>),
          replies: json['replies'] == null
              ? null
              : InvidiousCommentResponseReplies.fromJson(
                  json['replies'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$$InvidiousCommentResponseCommentImplToJson(
        _$InvidiousCommentResponseCommentImpl instance) =>
    <String, dynamic>{
      'author': instance.author,
      'authorThumbnails': instance.authorThumbnails,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'isEdited': instance.isEdited,
      'isPinned': instance.isPinned,
      'content': instance.content,
      'contentHtml': instance.contentHtml,
      'published': instance.published,
      'publishedText': instance.publishedText,
      'likeCount': instance.likeCount,
      'commentId': instance.commentId,
      'authorIsChannelOwner': instance.authorIsChannelOwner,
      'creatorHeart': instance.creatorHeart,
      'replies': instance.replies,
    };

_$InvidiousCommentResponseCreatorHeartImpl
    _$$InvidiousCommentResponseCreatorHeartImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousCommentResponseCreatorHeartImpl(
          creatorThumbnail: json['creatorThumbnail'] as String,
          creatorName: json['creatorName'] as String,
        );

Map<String, dynamic> _$$InvidiousCommentResponseCreatorHeartImplToJson(
        _$InvidiousCommentResponseCreatorHeartImpl instance) =>
    <String, dynamic>{
      'creatorThumbnail': instance.creatorThumbnail,
      'creatorName': instance.creatorName,
    };

_$InvidiousCommentResponseRepliesImpl
    _$$InvidiousCommentResponseRepliesImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousCommentResponseRepliesImpl(
          replyCount: (json['replyCount'] as num).toInt(),
          continuation: json['continuation'] as String,
        );

Map<String, dynamic> _$$InvidiousCommentResponseRepliesImplToJson(
        _$InvidiousCommentResponseRepliesImpl instance) =>
    <String, dynamic>{
      'replyCount': instance.replyCount,
      'continuation': instance.continuation,
    };

_$InvidiousMixResponseImpl _$$InvidiousMixResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousMixResponseImpl(
      title: json['title'] as String,
      mixId: json['mixId'] as String,
      videos: (json['videos'] as List<dynamic>)
          .map((e) =>
              InvidiousMixResponseVideo.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$$InvidiousMixResponseImplToJson(
        _$InvidiousMixResponseImpl instance) =>
    <String, dynamic>{
      'title': instance.title,
      'mixId': instance.mixId,
      'videos': instance.videos,
    };

_$InvidiousMixResponseVideoImpl _$$InvidiousMixResponseVideoImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousMixResponseVideoImpl(
      title: json['title'] as String,
      videoId: json['videoId'] as String,
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      index: (json['index'] as num).toInt(),
      lengthSeconds: (json['lengthSeconds'] as num).toInt(),
    );

Map<String, dynamic> _$$InvidiousMixResponseVideoImplToJson(
        _$InvidiousMixResponseVideoImpl instance) =>
    <String, dynamic>{
      'title': instance.title,
      'videoId': instance.videoId,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'videoThumbnails': instance.videoThumbnails,
      'index': instance.index,
      'lengthSeconds': instance.lengthSeconds,
    };

_$InvidiousResolveUrlResponseImpl _$$InvidiousResolveUrlResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousResolveUrlResponseImpl(
      ucid: json['ucid'] as String?,
      videoId: json['videoId'] as String?,
      playlistId: json['playlistId'] as String?,
      startTimeSeconds: json['startTimeSeconds'] as String?,
      params: json['params'] as String?,
      pageType: json['pageType'] as String,
    );

Map<String, dynamic> _$$InvidiousResolveUrlResponseImplToJson(
        _$InvidiousResolveUrlResponseImpl instance) =>
    <String, dynamic>{
      'ucid': instance.ucid,
      'videoId': instance.videoId,
      'playlistId': instance.playlistId,
      'startTimeSeconds': instance.startTimeSeconds,
      'params': instance.params,
      'pageType': instance.pageType,
    };

_$InvidiousSearchResponseVideoImpl _$$InvidiousSearchResponseVideoImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousSearchResponseVideoImpl(
      type: json['type'] as String,
      title: json['title'] as String,
      videoId: json['videoId'] as String,
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      description: json['description'] as String,
      descriptionHtml: json['descriptionHtml'] as String,
      viewCount: (json['viewCount'] as num).toInt(),
      published: (json['published'] as num).toInt(),
      publishedText: json['publishedText'] as String,
      lengthSeconds: (json['lengthSeconds'] as num).toInt(),
      liveNow: json['liveNow'] as bool,
      paid: json['paid'] as bool?,
      premium: json['premium'] as bool,
    );

Map<String, dynamic> _$$InvidiousSearchResponseVideoImplToJson(
        _$InvidiousSearchResponseVideoImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'title': instance.title,
      'videoId': instance.videoId,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'videoThumbnails': instance.videoThumbnails,
      'description': instance.description,
      'descriptionHtml': instance.descriptionHtml,
      'viewCount': instance.viewCount,
      'published': instance.published,
      'publishedText': instance.publishedText,
      'lengthSeconds': instance.lengthSeconds,
      'liveNow': instance.liveNow,
      'paid': instance.paid,
      'premium': instance.premium,
    };

_$InvidiousSearchResponsePlaylistImpl
    _$$InvidiousSearchResponsePlaylistImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousSearchResponsePlaylistImpl(
          type: json['type'] as String,
          title: json['title'] as String,
          playlistId: json['playlistId'] as String,
          playlistThumbnail: json['playlistThumbnail'] as String,
          author: json['author'] as String,
          authorId: json['authorId'] as String,
          authorUrl: json['authorUrl'] as String,
          authorVerified: json['authorVerified'] as bool,
          videoCount: (json['videoCount'] as num).toInt(),
          videos: (json['videos'] as List<dynamic>)
              .map((e) => InvidiousSearchResponsePlaylistVideo.fromJson(
                  e as Map<String, dynamic>))
              .toList(),
        );

Map<String, dynamic> _$$InvidiousSearchResponsePlaylistImplToJson(
        _$InvidiousSearchResponsePlaylistImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'title': instance.title,
      'playlistId': instance.playlistId,
      'playlistThumbnail': instance.playlistThumbnail,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'authorVerified': instance.authorVerified,
      'videoCount': instance.videoCount,
      'videos': instance.videos,
    };

_$InvidiousSearchResponseChannelImpl
    _$$InvidiousSearchResponseChannelImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousSearchResponseChannelImpl(
          type: json['type'] as String,
          author: json['author'] as String,
          authorId: json['authorId'] as String,
          authorUrl: json['authorUrl'] as String,
          authorThumbnails: (json['authorThumbnails'] as List<dynamic>)
              .map((e) =>
                  InvidiousImageObject.fromJson(e as Map<String, dynamic>))
              .toList(),
          autoGenerated: json['autoGenerated'] as bool,
          subCount: (json['subCount'] as num).toInt(),
          videoCount: (json['videoCount'] as num).toInt(),
          description: json['description'] as String,
          descriptionHtml: json['descriptionHtml'] as String,
        );

Map<String, dynamic> _$$InvidiousSearchResponseChannelImplToJson(
        _$InvidiousSearchResponseChannelImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'authorThumbnails': instance.authorThumbnails,
      'autoGenerated': instance.autoGenerated,
      'subCount': instance.subCount,
      'videoCount': instance.videoCount,
      'description': instance.description,
      'descriptionHtml': instance.descriptionHtml,
    };

_$InvidiousSearchResponsePlaylistVideoImpl
    _$$InvidiousSearchResponsePlaylistVideoImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousSearchResponsePlaylistVideoImpl(
          title: json['title'] as String,
          videoId: json['videoId'] as String,
          lengthSeconds: (json['lengthSeconds'] as num).toInt(),
          videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
              .map((e) =>
                  InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
              .toList(),
        );

Map<String, dynamic> _$$InvidiousSearchResponsePlaylistVideoImplToJson(
        _$InvidiousSearchResponsePlaylistVideoImpl instance) =>
    <String, dynamic>{
      'title': instance.title,
      'videoId': instance.videoId,
      'lengthSeconds': instance.lengthSeconds,
      'videoThumbnails': instance.videoThumbnails,
    };

_$InvidiousStatsResponseImpl _$$InvidiousStatsResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousStatsResponseImpl(
      version: json['version'] as String,
      software: InvidiousStatsResponseSoftware.fromJson(
          json['software'] as Map<String, dynamic>),
      openRegistrations: json['openRegistrations'] as bool,
      usage: InvidiousStatsResponseUsage.fromJson(
          json['usage'] as Map<String, dynamic>),
      metadata: InvidiousStatsResponseMetadata.fromJson(
          json['metadata'] as Map<String, dynamic>),
      playback: InvidiousStatsResponsePlayback.fromJson(
          json['playback'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$$InvidiousStatsResponseImplToJson(
        _$InvidiousStatsResponseImpl instance) =>
    <String, dynamic>{
      'version': instance.version,
      'software': instance.software,
      'openRegistrations': instance.openRegistrations,
      'usage': instance.usage,
      'metadata': instance.metadata,
      'playback': instance.playback,
    };

_$InvidiousStatsResponseSoftwareImpl
    _$$InvidiousStatsResponseSoftwareImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousStatsResponseSoftwareImpl(
          name: json['name'] as String,
          version: json['version'] as String,
          branch: json['branch'] as String,
        );

Map<String, dynamic> _$$InvidiousStatsResponseSoftwareImplToJson(
        _$InvidiousStatsResponseSoftwareImpl instance) =>
    <String, dynamic>{
      'name': instance.name,
      'version': instance.version,
      'branch': instance.branch,
    };

_$InvidiousStatsResponseUsageImpl _$$InvidiousStatsResponseUsageImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousStatsResponseUsageImpl(
      users: InvidiousStatsResponseUsageUsers.fromJson(
          json['users'] as Map<String, dynamic>),
    );

Map<String, dynamic> _$$InvidiousStatsResponseUsageImplToJson(
        _$InvidiousStatsResponseUsageImpl instance) =>
    <String, dynamic>{
      'users': instance.users,
    };

_$InvidiousStatsResponseUsageUsersImpl
    _$$InvidiousStatsResponseUsageUsersImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousStatsResponseUsageUsersImpl(
          total: (json['total'] as num).toInt(),
          activeHalfyear: (json['activeHalfyear'] as num).toInt(),
          activeMonth: (json['activeMonth'] as num).toInt(),
        );

Map<String, dynamic> _$$InvidiousStatsResponseUsageUsersImplToJson(
        _$InvidiousStatsResponseUsageUsersImpl instance) =>
    <String, dynamic>{
      'total': instance.total,
      'activeHalfyear': instance.activeHalfyear,
      'activeMonth': instance.activeMonth,
    };

_$InvidiousStatsResponseMetadataImpl
    _$$InvidiousStatsResponseMetadataImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousStatsResponseMetadataImpl(
          updatedAt: (json['updatedAt'] as num).toInt(),
          lastChannelRefreshedAt:
              (json['lastChannelRefreshedAt'] as num).toInt(),
        );

Map<String, dynamic> _$$InvidiousStatsResponseMetadataImplToJson(
        _$InvidiousStatsResponseMetadataImpl instance) =>
    <String, dynamic>{
      'updatedAt': instance.updatedAt,
      'lastChannelRefreshedAt': instance.lastChannelRefreshedAt,
    };

_$InvidiousStatsResponsePlaybackImpl
    _$$InvidiousStatsResponsePlaybackImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousStatsResponsePlaybackImpl(
          totalRequests: (json['totalRequests'] as num?)?.toInt(),
          successfulRequests: (json['successfulRequests'] as num?)?.toInt(),
          ratio: (json['ratio'] as num?)?.toDouble(),
        );

Map<String, dynamic> _$$InvidiousStatsResponsePlaybackImplToJson(
        _$InvidiousStatsResponsePlaybackImpl instance) =>
    <String, dynamic>{
      'totalRequests': instance.totalRequests,
      'successfulRequests': instance.successfulRequests,
      'ratio': instance.ratio,
    };

_$InvidiousSearchSuggestionResponseImpl
    _$$InvidiousSearchSuggestionResponseImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousSearchSuggestionResponseImpl(
          query: json['query'] as String,
          suggestions: (json['suggestions'] as List<dynamic>)
              .map((e) => e as String)
              .toList(),
        );

Map<String, dynamic> _$$InvidiousSearchSuggestionResponseImplToJson(
        _$InvidiousSearchSuggestionResponseImpl instance) =>
    <String, dynamic>{
      'query': instance.query,
      'suggestions': instance.suggestions,
    };

_$InvidiousTrendingVideoImpl _$$InvidiousTrendingVideoImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousTrendingVideoImpl(
      title: json['title'] as String,
      videoId: json['videoId'] as String,
      videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      lengthSeconds: (json['lengthSeconds'] as num).toInt(),
      viewCount: (json['viewCount'] as num).toInt(),
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      published: (json['published'] as num).toInt(),
      publishedText: json['publishedText'] as String,
      description: json['description'] as String,
      descriptionHtml: json['descriptionHtml'] as String,
      liveNow: json['liveNow'] as bool,
      paid: json['paid'] as bool?,
      premium: json['premium'] as bool,
    );

Map<String, dynamic> _$$InvidiousTrendingVideoImplToJson(
        _$InvidiousTrendingVideoImpl instance) =>
    <String, dynamic>{
      'title': instance.title,
      'videoId': instance.videoId,
      'videoThumbnails': instance.videoThumbnails,
      'lengthSeconds': instance.lengthSeconds,
      'viewCount': instance.viewCount,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'published': instance.published,
      'publishedText': instance.publishedText,
      'description': instance.description,
      'descriptionHtml': instance.descriptionHtml,
      'liveNow': instance.liveNow,
      'paid': instance.paid,
      'premium': instance.premium,
    };

_$InvidiousVideoResponseImpl _$$InvidiousVideoResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousVideoResponseImpl(
      type: json['type'] as String,
      title: json['title'] as String,
      videoId: json['videoId'] as String,
      videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      storyboards: (json['storyboards'] as List<dynamic>)
          .map((e) => InvidiousVideoResponseStoryboard.fromJson(
              e as Map<String, dynamic>))
          .toList(),
      description: json['description'] as String,
      descriptionHtml: json['descriptionHtml'] as String,
      published: (json['published'] as num).toInt(),
      publishedText: json['publishedText'] as String,
      keywords:
          (json['keywords'] as List<dynamic>).map((e) => e as String).toList(),
      viewCount: (json['viewCount'] as num).toInt(),
      likeCount: (json['likeCount'] as num).toInt(),
      dislikeCount: (json['dislikeCount'] as num).toInt(),
      paid: json['paid'] as bool,
      premium: json['premium'] as bool,
      isFamilyFriendly: json['isFamilyFriendly'] as bool,
      allowedRegions: (json['allowedRegions'] as List<dynamic>)
          .map((e) => e as String)
          .toList(),
      genre: json['genre'] as String,
      genreUrl: json['genreUrl'] as String?,
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      authorThumbnails: (json['authorThumbnails'] as List<dynamic>)
          .map((e) => InvidiousImageObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      subCountText: json['subCountText'] as String,
      lengthSeconds: (json['lengthSeconds'] as num).toInt(),
      allowRatings: json['allowRatings'] as bool,
      rating: (json['rating'] as num).toDouble(),
      isListed: json['isListed'] as bool,
      liveNow: json['liveNow'] as bool,
      isPostLiveDvr: json['isPostLiveDvr'] as bool,
      isUpcoming: json['isUpcoming'] as bool,
      dashUrl: json['dashUrl'] as String?,
      premiereTimestamp: (json['premiereTimestamp'] as num?)?.toInt(),
      hlsUrl: json['hlsUrl'] as String?,
      adaptiveFormats: (json['adaptiveFormats'] as List<dynamic>)
          .map((e) => InvidiousVideoResponseAdaptiveFormat.fromJson(
              e as Map<String, dynamic>))
          .toList(),
      formatStreams: (json['formatStreams'] as List<dynamic>)
          .map((e) => InvidiousVideoResponseFormatStream.fromJson(
              e as Map<String, dynamic>))
          .toList(),
      captions: (json['captions'] as List<dynamic>)
          .map((e) =>
              InvidiousVideoResponseCaption.fromJson(e as Map<String, dynamic>))
          .toList(),
      recommendedVideos: (json['recommendedVideos'] as List<dynamic>)
          .map((e) => InvidiousVideoResponseRecommendedVideo.fromJson(
              e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$$InvidiousVideoResponseImplToJson(
        _$InvidiousVideoResponseImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'title': instance.title,
      'videoId': instance.videoId,
      'videoThumbnails': instance.videoThumbnails,
      'storyboards': instance.storyboards,
      'description': instance.description,
      'descriptionHtml': instance.descriptionHtml,
      'published': instance.published,
      'publishedText': instance.publishedText,
      'keywords': instance.keywords,
      'viewCount': instance.viewCount,
      'likeCount': instance.likeCount,
      'dislikeCount': instance.dislikeCount,
      'paid': instance.paid,
      'premium': instance.premium,
      'isFamilyFriendly': instance.isFamilyFriendly,
      'allowedRegions': instance.allowedRegions,
      'genre': instance.genre,
      'genreUrl': instance.genreUrl,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'authorThumbnails': instance.authorThumbnails,
      'subCountText': instance.subCountText,
      'lengthSeconds': instance.lengthSeconds,
      'allowRatings': instance.allowRatings,
      'rating': instance.rating,
      'isListed': instance.isListed,
      'liveNow': instance.liveNow,
      'isPostLiveDvr': instance.isPostLiveDvr,
      'isUpcoming': instance.isUpcoming,
      'dashUrl': instance.dashUrl,
      'premiereTimestamp': instance.premiereTimestamp,
      'hlsUrl': instance.hlsUrl,
      'adaptiveFormats': instance.adaptiveFormats,
      'formatStreams': instance.formatStreams,
      'captions': instance.captions,
      'recommendedVideos': instance.recommendedVideos,
    };

_$InvidiousVideoResponseStoryboardImpl
    _$$InvidiousVideoResponseStoryboardImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousVideoResponseStoryboardImpl(
          url: json['url'] as String,
          templateUrl: json['templateUrl'] as String,
          width: (json['width'] as num).toInt(),
          height: (json['height'] as num).toInt(),
          count: (json['count'] as num).toInt(),
          interval: (json['interval'] as num).toInt(),
          storyboardWidth: (json['storyboardWidth'] as num).toInt(),
          storyboardHeight: (json['storyboardHeight'] as num).toInt(),
          storyboardCount: (json['storyboardCount'] as num).toInt(),
        );

Map<String, dynamic> _$$InvidiousVideoResponseStoryboardImplToJson(
        _$InvidiousVideoResponseStoryboardImpl instance) =>
    <String, dynamic>{
      'url': instance.url,
      'templateUrl': instance.templateUrl,
      'width': instance.width,
      'height': instance.height,
      'count': instance.count,
      'interval': instance.interval,
      'storyboardWidth': instance.storyboardWidth,
      'storyboardHeight': instance.storyboardHeight,
      'storyboardCount': instance.storyboardCount,
    };

_$InvidiousVideoResponseAdaptiveFormatImpl
    _$$InvidiousVideoResponseAdaptiveFormatImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousVideoResponseAdaptiveFormatImpl(
          index: json['index'] as String,
          bitrate: json['bitrate'] as String,
          init: json['init'] as String,
          url: json['url'] as String,
          itag: json['itag'] as String,
          type: json['type'] as String,
          clen: json['clen'] as String,
          lmt: json['lmt'] as String,
          projectionType: json['projectionType'] as String,
          container: json['container'] as String,
          encoding: json['encoding'] as String,
          qualityLabel: json['qualityLabel'] as String?,
          resolution: json['resolution'] as String?,
        );

Map<String, dynamic> _$$InvidiousVideoResponseAdaptiveFormatImplToJson(
        _$InvidiousVideoResponseAdaptiveFormatImpl instance) =>
    <String, dynamic>{
      'index': instance.index,
      'bitrate': instance.bitrate,
      'init': instance.init,
      'url': instance.url,
      'itag': instance.itag,
      'type': instance.type,
      'clen': instance.clen,
      'lmt': instance.lmt,
      'projectionType': instance.projectionType,
      'container': instance.container,
      'encoding': instance.encoding,
      'qualityLabel': instance.qualityLabel,
      'resolution': instance.resolution,
    };

_$InvidiousVideoResponseFormatStreamImpl
    _$$InvidiousVideoResponseFormatStreamImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousVideoResponseFormatStreamImpl(
          url: json['url'] as String,
          itag: json['itag'] as String,
          type: json['type'] as String,
          quality: json['quality'] as String,
          container: json['container'] as String,
          encoding: json['encoding'] as String,
          qualityLabel: json['qualityLabel'] as String,
          resolution: json['resolution'] as String,
          size: json['size'] as String,
        );

Map<String, dynamic> _$$InvidiousVideoResponseFormatStreamImplToJson(
        _$InvidiousVideoResponseFormatStreamImpl instance) =>
    <String, dynamic>{
      'url': instance.url,
      'itag': instance.itag,
      'type': instance.type,
      'quality': instance.quality,
      'container': instance.container,
      'encoding': instance.encoding,
      'qualityLabel': instance.qualityLabel,
      'resolution': instance.resolution,
      'size': instance.size,
    };

_$InvidiousVideoResponseCaptionImpl
    _$$InvidiousVideoResponseCaptionImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousVideoResponseCaptionImpl(
          label: json['label'] as String,
          languageCode: json['languageCode'] as String,
          url: json['url'] as String,
        );

Map<String, dynamic> _$$InvidiousVideoResponseCaptionImplToJson(
        _$InvidiousVideoResponseCaptionImpl instance) =>
    <String, dynamic>{
      'label': instance.label,
      'languageCode': instance.languageCode,
      'url': instance.url,
    };

_$InvidiousVideoResponseRecommendedVideoImpl
    _$$InvidiousVideoResponseRecommendedVideoImplFromJson(
            Map<String, dynamic> json) =>
        _$InvidiousVideoResponseRecommendedVideoImpl(
          videoId: json['videoId'] as String,
          title: json['title'] as String,
          videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
              .map((e) =>
                  InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
              .toList(),
          author: json['author'] as String,
          lengthSeconds: (json['lengthSeconds'] as num).toInt(),
          viewCountText: json['viewCountText'] as String,
        );

Map<String, dynamic> _$$InvidiousVideoResponseRecommendedVideoImplToJson(
        _$InvidiousVideoResponseRecommendedVideoImpl instance) =>
    <String, dynamic>{
      'videoId': instance.videoId,
      'title': instance.title,
      'videoThumbnails': instance.videoThumbnails,
      'author': instance.author,
      'lengthSeconds': instance.lengthSeconds,
      'viewCountText': instance.viewCountText,
    };

_$InvidiousPlaylistResponseImpl _$$InvidiousPlaylistResponseImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousPlaylistResponseImpl(
      title: json['title'] as String,
      playlistId: json['playlistId'] as String,
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorThumbnails: (json['authorThumbnails'] as List<dynamic>)
          .map((e) => InvidiousImageObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      description: json['description'] as String,
      descriptionHtml: json['descriptionHtml'] as String,
      videoCount: (json['videoCount'] as num).toInt(),
      viewCount: (json['viewCount'] as num).toInt(),
      updated: (json['updated'] as num).toInt(),
      videos: (json['videos'] as List<dynamic>)
          .map((e) => InvidiousPlaylistResponseVideo.fromJson(
              e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$$InvidiousPlaylistResponseImplToJson(
        _$InvidiousPlaylistResponseImpl instance) =>
    <String, dynamic>{
      'title': instance.title,
      'playlistId': instance.playlistId,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorThumbnails': instance.authorThumbnails,
      'description': instance.description,
      'descriptionHtml': instance.descriptionHtml,
      'videoCount': instance.videoCount,
      'viewCount': instance.viewCount,
      'updated': instance.updated,
      'videos': instance.videos,
    };

_$InvidiousPlaylistResponseVideoImpl
    _$$InvidiousPlaylistResponseVideoImplFromJson(Map<String, dynamic> json) =>
        _$InvidiousPlaylistResponseVideoImpl(
          title: json['title'] as String,
          videoId: json['videoId'] as String,
          author: json['author'] as String,
          authorId: json['authorId'] as String,
          authorUrl: json['authorUrl'] as String,
          videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
              .map((e) =>
                  InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
              .toList(),
          index: (json['index'] as num).toInt(),
          lengthSeconds: (json['lengthSeconds'] as num).toInt(),
        );

Map<String, dynamic> _$$InvidiousPlaylistResponseVideoImplToJson(
        _$InvidiousPlaylistResponseVideoImpl instance) =>
    <String, dynamic>{
      'title': instance.title,
      'videoId': instance.videoId,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'videoThumbnails': instance.videoThumbnails,
      'index': instance.index,
      'lengthSeconds': instance.lengthSeconds,
    };

_$InvidiousPopularVideoImpl _$$InvidiousPopularVideoImplFromJson(
        Map<String, dynamic> json) =>
    _$InvidiousPopularVideoImpl(
      type: json['type'] as String,
      title: json['title'] as String,
      videoId: json['videoId'] as String,
      videoThumbnails: (json['videoThumbnails'] as List<dynamic>)
          .map((e) =>
              InvidiousThumbnailObject.fromJson(e as Map<String, dynamic>))
          .toList(),
      lengthSeconds: (json['lengthSeconds'] as num).toInt(),
      viewCount: (json['viewCount'] as num).toInt(),
      author: json['author'] as String,
      authorId: json['authorId'] as String,
      authorUrl: json['authorUrl'] as String,
      published: (json['published'] as num).toInt(),
      publishedText: json['publishedText'] as String,
    );

Map<String, dynamic> _$$InvidiousPopularVideoImplToJson(
        _$InvidiousPopularVideoImpl instance) =>
    <String, dynamic>{
      'type': instance.type,
      'title': instance.title,
      'videoId': instance.videoId,
      'videoThumbnails': instance.videoThumbnails,
      'lengthSeconds': instance.lengthSeconds,
      'viewCount': instance.viewCount,
      'author': instance.author,
      'authorId': instance.authorId,
      'authorUrl': instance.authorUrl,
      'published': instance.published,
      'publishedText': instance.publishedText,
    };
