part of '../model.dart';

enum InvidiousSearchSort { relevance, rating, date, views }

enum InvidiousSearchDate { hour, today, week, month, year }

enum InvidiousSearchDuration { short, long, medium }

enum InvidiousSearchType { video, playlist, channel, movie, show, all }

enum InvidiousSearchFeatures {
  hd("hd"),
  subtitles("subtitles"),
  creativeCommons("creative_commons"),
  threeD("3d"),
  live("live"),
  purchased("purchased"),
  fourK("4K"),
  threeSixty("360"),
  location("location"),
  hdr("hdr"),
  vr180("vr180");

  final String value;

  const InvidiousSearchFeatures(this.value);
}

@Freezed(unionKey: 'type')
class InvidiousSearchResponse with _$InvidiousSearchResponse {
  @FreezedUnionValue('video')
  const factory InvidiousSearchResponse.video({
    required String type,
    required String title,
    required String videoId,
    required String author,
    required String authorId,
    required String authorUrl,
    required List<InvidiousThumbnailObject> videoThumbnails,
    required String description,
    required String descriptionHtml,
    required int viewCount,
    required int published,
    required String publishedText,
    required int lengthSeconds,
    required bool liveNow,
    bool? paid,
    required bool premium,
  }) = InvidiousSearchResponseVideo;

  @FreezedUnionValue('playlist')
  const factory InvidiousSearchResponse.playlist({
    required String type,
    required String title,
    required String playlistId,
    required String playlistThumbnail,
    required String author,
    required String authorId,
    required String authorUrl,
    required bool authorVerified,
    required int videoCount,
    required List<InvidiousSearchResponsePlaylistVideo> videos,
  }) = InvidiousSearchResponsePlaylist;

  @FreezedUnionValue('channel')
  const factory InvidiousSearchResponse.channel({
    required String type,
    required String author,
    required String authorId,
    required String authorUrl,
    required List<InvidiousImageObject> authorThumbnails,
    required bool autoGenerated,
    required int subCount,
    required int videoCount,
    required String description,
    required String descriptionHtml,
  }) = InvidiousSearchResponseChannel;

  factory InvidiousSearchResponse.fromJson(Map<String, dynamic> json) =>
      _$InvidiousSearchResponseFromJson(json);
}

@freezed
class InvidiousSearchResponsePlaylistVideo
    with _$InvidiousSearchResponsePlaylistVideo {
  const factory InvidiousSearchResponsePlaylistVideo({
    required String title,
    required String videoId,
    required int lengthSeconds,
    required List<InvidiousThumbnailObject> videoThumbnails,
  }) = _InvidiousSearchResponsePlaylistVideo;

  factory InvidiousSearchResponsePlaylistVideo.fromJson(
          Map<String, dynamic> json) =>
      _$InvidiousSearchResponsePlaylistVideoFromJson(json);
}
